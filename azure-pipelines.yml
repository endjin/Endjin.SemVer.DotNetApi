trigger:
  branches:
    include:
    - main
    - feature/*
    - features/*
  tags:
    include:
    - '*'

resources:
  repositories:
    - repository: recommended_practices
      type: github
      name: endjin/Endjin.RecommendedPractices.AzureDevopsPipelines.GitHub
      endpoint: endjin-github
      ref: feature/nupkgversion-override

variables:
  NupkgversionToolPath: 'dotnet $(Build.SourcesDirectory)/Solutions/Endjin.SemVer.DotNetApi.Cli/bin/$(Configuration)/net6.0/nupkgversion.dll'

jobs:
- template: templates/build.and.release.yml@recommended_practices
  parameters:
    vmImage: 'ubuntu-latest'
    service_connection_nuget_org: $(Endjin_Service_Connection_NuGet_Org)
    service_connection_github: $(Endjin_Service_Connection_GitHub)
    solution_to_build: $(Endjin_Solution_To_Build)
    netSdkVersion: '6.x'
    postBuild:
      - pwsh: |
          Write-Host "**** Versions of Endjin.SemVer.DotNetApi"
          gci -recurse Endjin.SemVer.DotNetApi.dll | % { Write-Host ("{1} => {0}" -f $_.FullName, ([Reflection.AssemblyName]::GetAssemblyName($_.FullName)).Version) }
          Write-Host "**** Versions of nupkgversion"
          gci -recurse nupkgversion.dll | % { Write-Host ("{1} => {0}" -f $_.FullName, ([Reflection.AssemblyName]::GetAssemblyName($_.FullName)).Version) }
        displayName: Debug assembly versions after build
    postRunExecutableSpecs:
      - pwsh: |
          Write-Host "**** Versions of Endjin.SemVer.DotNetApi"
          gci -recurse Endjin.SemVer.DotNetApi.dll | % { Write-Host ("{1} => {0}" -f $_.FullName, ([Reflection.AssemblyName]::GetAssemblyName($_.FullName)).Version) }
          Write-Host "**** Versions of nupkgversion"
          gci -recurse nupkgversion.dll | % { Write-Host ("{1} => {0}" -f $_.FullName, ([Reflection.AssemblyName]::GetAssemblyName($_.FullName)).Version) }
        displayName: Debug assembly versions after test
    postPack:
      - pwsh: |
          Write-Host "**** Versions of Endjin.SemVer.DotNetApi"
          gci -recurse Endjin.SemVer.DotNetApi.dll | % { Write-Host ("{1} => {0}" -f $_.FullName, ([Reflection.AssemblyName]::GetAssemblyName($_.FullName)).Version) }
          Write-Host "**** Versions of nupkgversion"
          gci -recurse nupkgversion.dll | % { Write-Host ("{1} => {0}" -f $_.FullName, ([Reflection.AssemblyName]::GetAssemblyName($_.FullName)).Version) }
        displayName: Debug assembly versions after pack